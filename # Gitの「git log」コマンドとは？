もちろんです、友季子さん！😊
では、新人エンジニア向けに **Gitの「git log」コマンドの使い方** を丁寧に解説していきます。記事の内容を噛み砕いて、初心者でも理解しやすいように順を追って説明します。

---

# Gitの「git log」コマンドとは？

Gitの **`git log`** は、リポジトリ内の **コミット履歴を確認するためのコマンド** です。
「誰がいつ、どんな変更を加えたか」を一覧で確認できます。

---

## 1. コミット履歴とは？

* Gitではファイルやフォルダの変更を **コミット（commit）** という単位で記録します。
* コミット履歴は、その変更の **記録の履歴** です。
* 履歴には次の情報が含まれます：

  1. **コミットID（SHA値）**：変更を識別する一意の番号
  2. **作成者（Author）**：誰がコミットしたか
  3. **日時（Date）**：いつコミットしたか
  4. **コメント（Message）**：コミット内容の説明

例：

```bash
$ git log
commit 998168ad393944a36cac66f980f5e2699adb5ad2
Author: user_name <user_name@users.noreply.github.com>
Date:   Fri May 5 14:43:58 2023 +0900

    create hello_world.html
```

---

## 2. 基本的な使い方

1. Git Bash などのターミナルを開く
2. コミット履歴を見たい **リポジトリのフォルダに移動**
3. 次のコマンドを実行：

```bash
git log
```

* 最新のコミットが上に表示されます
* 長くなる場合は **スクロール** して確認可能です

---

## 3. よく使うオプション

### 3-1. 1行で表示：`--oneline`

```bash
git log --oneline
```

* 各コミットを1行で簡潔に表示
* SHA値の短縮版 + コメントが見やすくなる

例：

```
998168a create hello_world.html
2f4e3b7 update README.md
```

---

### 3-2. グラフィカル表示：`--graph`

```bash
git log --graph
```

* コミットの枝分かれ（ブランチやマージ）をアスキーアートで表示
* 図のように履歴の流れを視覚化できる

---

### 3-3. キーワードで検索：`--grep`

```bash
git log --grep="fix"
```

* コミットコメントに `"fix"` を含む履歴だけを表示
* バグ修正や特定機能の変更を探すときに便利

---

### 3-4. 作者で絞り込み：`--author`

```bash
git log --author="username"
```

* 特定ユーザーのコミットだけ表示
* チーム開発で誰が何をしたか確認するのに便利

---

### 3-5. 最新n件だけ表示：`-n`

```bash
git log -n 3
```

* 最新3件のコミットだけ表示
* 履歴が長すぎるときに使うと便利

---

### 3-6. 指定期間以降：`--since`

```bash
git log --since="5 days ago"
git log --since="2023-06-21 10:10:00"
```

* 指定した日時以降のコミットだけ表示
* 特定期間の変更を確認するときに便利

---

### 3-7. マージコミットだけ：`--merges`

```bash
git log --merges
```

* マージに関する履歴のみ表示
* ブランチ統合の履歴だけ見たい場合に便利

---

## 4. まとめ

* **`git log`** は、コミット履歴を見るための基本コマンド
* オプションを組み合わせることで、表示方法をカスタマイズできる
* 初心者はまず `git log --oneline --graph` を使うと視覚的にわかりやすい

---

💡 **ポイント**

* `git log` は **履歴の確認** に使うもの
* 修正や差分の確認には `git diff` や `git show` と組み合わせると便利

---

もしよければ、私が **新人向けに図解入りで「git log コマンドの活用例」をまとめたミニチートシート** を作ることもできます。
これを見れば、一目でコマンドとオプションの意味がわかるようになります。

作ってほしいですか？
