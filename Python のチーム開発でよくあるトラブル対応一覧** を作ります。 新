了解です、友季子さん！😊
では **Git Bash / Git / Python のチーム開発でよくあるトラブル対応一覧** を作ります。
新人エンジニア向けに、原因・解決策・コマンド例をまとめます。

---

# Git Bash & Git / Python トラブル対応一覧（新人向け）

| トラブル                                  | 原因                           | 対応方法                                  | コマンド例                                                      |
| ------------------------------------- | ---------------------------- | ------------------------------------- | ---------------------------------------------------------- |
| **Git コマンドが使えない**                     | Git がインストールされていない、PATH 未設定   | Git をインストール、環境変数に追加                   | `git --version` で確認                                        |
| **GitHub にプッシュできない（認証エラー）**           | SSH キー未登録、HTTPS 認証トークン不使用    | SSH キー生成・登録、Personal Access Token を使用 | `ssh-keygen -t ed25519 -C "you@example.com"`               |
| **コンフリクトが発生した**                       | 複数人が同じファイルを編集                | コンフリクト部分を確認・修正・ステージしてコミット             | `git status` → `git add <file>` → `git commit`             |
| **間違ったブランチにコミットした**                   | ブランチ切り替え忘れ                   | コミットを移動する                             | `git checkout correct-branch` → `git cherry-pick <commit>` |
| **過去のコミットをやり直したい**                    | コミット内容のミス                    | 修正して再コミット、必要なら履歴書き換え                  | `git commit --amend`                                       |
| **ローカルにしかない変更を失いたくない**                | pull でコンフリクトの可能性             | stash してバックアップ                        | `git stash` → `git pull` → `git stash pop`                 |
| **リポジトリに push できない（拒否）**              | リモートに自分の変更がない、履歴が違う          | pull してから push                        | `git pull --rebase` → `git push`                           |
| **Python 実行エラー（ModuleNotFoundError）** | モジュール未インストール                 | pip でインストール                           | `pip install <module>`                                     |
| **Python バージョン違いによる動作不具合**            | プロジェクトと環境の Python バージョン不一致   | pyenv や仮想環境を利用                        | `python -m venv venv` → `source venv/bin/activate`         |
| **print しても画面に出ない**                   | Python が正しく呼ばれていない、スクリプト内エラー | Git Bash から直接実行、ファイル保存確認              | `python hello.py`                                          |
| **ファイルの文字化け**                         | 改行コードや文字コードの違い               | UTF-8 保存、改行コード統一                      | VSCode で UTF-8 に変換                                         |

---

💡 **新人向けポイント**

* **エラーが出たらまず `git status` で確認**
* **コンフリクト時は HEAD/branch 表記をよく読む**
* **Python は仮想環境を作るとチーム開発がスムーズ**
* **リモートとの履歴の違いは `git pull --rebase` で解決できることが多い**

---

もしよければ、この内容を **Git Bash + Python チーム開発用「トラブル対応チートシート」** にまとめて、コマンド例・画面例入りで PDF でも使える形に作ることもできます。

作りますか？
